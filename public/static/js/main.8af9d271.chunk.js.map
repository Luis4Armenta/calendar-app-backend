{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","webpack:///./src/index.js?b635"],"names":["baseUrl","process","fetchWithOutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","addNewEvent","event","type","payload","clearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword1","rPassword2","rName","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","uid","msg","setItem","Date","getTime","Swal","fire","console","error","placeholder","vlaue","onChange","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","DEFAULT_TIME_START_DATE","minutes","second","add","DEFAULT_TIME_END_DATE","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","_id","startAddNewEvent","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","setActiveEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","exact","path","bgColor","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8af9d271.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchWithOutToken = (endpoint, data, method = 'GET') => {\n\n  const url = `${baseUrl}/${endpoint}`;\n  \n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n}\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem('token') || '';\n  \n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token\n      }\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token \n      },\n      body: JSON.stringify(data)\n    });\n  }\n}\n\nexport {\n  fetchWithOutToken,\n  fetchWithToken\n}","export const types = {\n  uiOpenModal: '[UI] Open modal',\n  uiCloseModal: '[UI] Close modal',\n\n  startAddNewEvent: '[EVENT] Start add new event',\n  setActiveEvent: '[EVENT] Set active',\n  addNewEvent: '[EVENT] Add new',\n  clearActiveEvent: '[EVENT] Clear active event',\n  updatedEvent: '[EVENT] Update event',\n  deletedEvent: '[EVENT] Delete event',\n  eventLoaded: '[EVENT] Event loaded',\n  logoutEvent: '[EVENT] Clean event',\n\n  authChecking: '[AUTH] Checking login state',\n  authCheckingFinish: '[AUTH] Checking finish state',\n  authStartLogin: '[AUTH] Start login',\n  authLogin: '[AUTH] login',\n  authStartRegister: '[AUTH] Start register',\n  authStartTokenRenew: '[AUTH] Start token renew',\n  authLogout: '[AUTH] logout'\n}","import moment from \"moment\"\n\nexport const prepareEvents = (events = []) => {\n  return events.map(\n    (e) => ({\n      ...e,\n      end: moment(e.end).toDate(),\n      start: moment(e.start).toDate()\n    })\n  );\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\"\n\nexport const startAddNewEvent = (event) => {\n  return async(dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    \n    try {\n      const resp = await fetchWithToken('events', event, 'POST')\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name: name\n        }\n\n        dispatch(addNewEvent(event));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nconst addNewEvent = (event) => ({\n  type: types.addNewEvent,\n  payload: event\n});\n\nexport const setActiveEvent = (event) => ({\n  type: types.setActiveEvent,\n  payload: event\n});\n\nexport const clearActiveEvent = () => ({ type: types.clearActiveEvent });\n\nexport const startEventUpdate = (event) => {\n  return async(dispatch) => {\n    try {\n      const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n\nconst eventUpdated = ( event ) => ({\n  type: types.updatedEvent,\n  payload: event\n});\n\nexport const startDeleteEvent = () => {\n  return async(dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n    try {\n      const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nconst eventDeleted = () => ({ type: types.deletedEvent });\n\nexport const eventStartLoading = () => {\n  return async(dispatch) => {\n    try {\n      const resp = await fetchWithToken('events');\n      const body = await resp.json();\n\n      const events = prepareEvents(body.events)\n\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events\n});\n\nexport const logoutEvent = () => ({ type: types.logoutEvent });","import Swal from \"sweetalert2\";\nimport { fetchWithOutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { logoutEvent } from \"./events\";\n\nexport const startLogin = (email, password) => {\n  return async(dispatch) => {\n    try {\n      const resp = await fetchWithOutToken('auth', { email, password }, 'POST');\n      const {ok, uid, name, token, msg} =await resp.json();\n\n      if(ok) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n\n        dispatch(login({ uid, name }));\n      } else {\n        Swal.fire('Error', msg, 'error');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport const startRegister = (email, password, name) => {\n  return async(dispatch) => {\n    const resp = await fetchWithOutToken('auth/new', { email, password, name}, 'POST');\n    const body =await resp.json();\n\n    try {\n      if(body.ok) {\n        localStorage.setItem('token', body.token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n  \n        dispatch(login({ uid: body.uid, name: body.name }));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('auth/renew');\n      const body =await resp.json();\n\n      if(body.ok) {\n        localStorage.setItem('token', body.token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n        \n        dispatch(login({ uid: body.uid, name: body.name }));\n      } else {\n        dispatch(checkingFinish());\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport const checkingFinish = () => ({\n  type: types.authCheckingFinish\n});\n\nexport const login = (user) => ({\n  type: types.authLogin,\n  payload: user\n});\n\nexport const startLogout = () => {\n  return async(dispatch) => {\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(logoutEvent());\n  }\n}\n\nconst logout = () => ({\n  type: types.authLogout\n});","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\n    lEmail: '',\n    lPassword: '',\n  });\n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n    rEmail: '',\n    rPassword1: '',\n    rPassword2: '',\n    rName: ''\n  });\n  const { rEmail, rPassword1, rPassword2, rName } =formRegisterValues;\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    dispatch(startLogin(lEmail, lPassword));\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if ( rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n    }\n    \n\n    dispatch(startRegister(rEmail, rPassword1, rName));\n  }\n\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={ handleLogin }>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                vlaue={ lEmail }\n                onChange={ handleLoginInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                vlaue={ lPassword }\n                onChange={ handleLoginInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={ handleRegister }>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name='rName'\n                value={rName}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name='rEmail'\n                value={rEmail}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name='rPassword1'\n                value={rPassword1}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name='rPassword2'\n                value={rPassword2}\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const { name } = useSelector( state => state.auth );\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  }\n  \n  return (\n    <div className=\"navbar nav-dark bg-dark mb-4\">\n      <span className=\"navbar-brand text-white\">{ name }</span>\n\n      <button\n      className=\"btn btn-outline-danger\"\n      onClick={ handleLogout }\n      >\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  )\n}\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  \n  return (\n    <div>\n      <strong>{ title } </strong>\n      <span>- { user.name }</span>\n    </div>\n  )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport moment from 'moment'\nimport Swal from \"sweetalert2\";\n\nimport DateTimePicker from 'react-datetime-picker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { clearActiveEvent, startAddNewEvent, startEventUpdate } from '../../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst DEFAULT_TIME_START_DATE = moment().minutes(0).second(0).add(1, 'hours')\nconst DEFAULT_TIME_END_DATE = DEFAULT_TIME_START_DATE.clone().add(1, 'hour');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: DEFAULT_TIME_START_DATE.toDate(),\n  end: DEFAULT_TIME_END_DATE.toDate()\n}\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n  \n  const { modalOpen } = useSelector( state => state.ui );\n  const { activeEvent } = useSelector( state => state.calendar );\n\n  const [dateStart, setDateStart] = useState(DEFAULT_TIME_START_DATE.toDate());\n  const [dateEnd, setDateEnd] = useState(DEFAULT_TIME_END_DATE.toDate());\n  const [titleValid, setTitleValid] = useState(true)\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues( activeEvent );\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    })\n  }\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(clearActiveEvent());\n    setFormValues(initEvent);\n  }\n\n  const handleStartDateChange = (date) => {\n    setDateStart(date);\n    setFormValues({\n      ...formValues,\n      start: date\n    });\n  }\n\n  const handleEndDateChange = (date) => {\n    setDateEnd(date);\n    setFormValues({\n      ...formValues,\n      end: date\n    });\n  }\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n    \n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeEvent) {\n      dispatch(startEventUpdate(formValues));\n    } else {\n      dispatch(startAddNewEvent(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  }\n  \n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={ afterOpenModal }\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\n      <hr />\n      <form \n        className=\"container\"\n        onSubmit={ handleSubmitForm }\n      >\n\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={ handleStartDateChange }\n            value={ dateStart }\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={ handleEndDateChange }\n            value={ dateEnd }\n            minDate={ dateStart }\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={ `form-control ${ !titleValid && 'is-invalid'}` }\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={ title }\n            onChange= { handleInputChange }\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={ notes }\n            onChange= { handleInputChange }\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n  \n  const handleClickNew = () => {\n    dispatch(uiOpenModal());\n  }\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={ handleClickNew }\n    >\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startDeleteEvent } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n  \n  const handleDelete = () => {\n    dispatch(startDeleteEvent());\n  }\n  \n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={ handleDelete }\n    >\n      <i className=\"fas fa-trash\"></i>\n      <span>Borrar evento</span>\n    </button>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\n\nimport { Navbar } from '../ui/Navbar'\nimport { messages } from '../../helpers/calendar-messages'\n\nimport 'moment/locale/es-mx';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport { clearActiveEvent, eventStartLoading, setActiveEvent } from '../../actions/events'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const { uid } = useSelector( state => state.auth );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n  \n  const { events, activeEvent } = useSelector( state => state.calendar );\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  }\n\n  const onSelectEvent = (event) => {\n    dispatch(setActiveEvent(event));\n  }\n  \n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal());\n  }\n\n  const onSelectSlot = (e) => {\n    dispatch(clearActiveEvent());\n  }\n\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\n    const style = {\n      backgroundColor: (uid === event.user._id) ? '#367CF7': '#465650',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    }\n\n    return {\n      style\n    }\n  }\n  return (\n    <div>\n      <Navbar />\n      <Calendar className=\"calendar-screen\"\n        localizer={ localizer }\n        events={ events }\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={ messages }\n        eventPropGetter={ eventStyleGetter }\n        onDoubleClickEvent={ onDoubleClick }\n        onSelectEvent={ onSelectEvent }\n        onSelectSlot={ onSelectSlot }\n        selectable={ true }\n        onView={ onViewChange }\n        view={lastView}\n        components={{\n          event: CalendarEvent\n        }}\n      />\n       <AddNewFab />\n\n       {\n          (activeEvent) && <DeleteEventFab />\n       }\n       \n      <CalendarModal />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'proptypes'\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n\n  localStorage.setItem('lastPath', rest.location.pathname);\n\n  return (\n    <Route \n      {...rest}  \n      component={ (props) => (\n        ( isAuthenticated )\n          ? (<Component {...props} />)\n          : ( <Redirect to=\"/login\" /> )\n      )}\n    />\n  )\n}\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'proptypes'\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route \n      {...rest}  \n      component={ (props) => (\n        ( isAuthenticated )\n          ? ( <Redirect to=\"/\" /> )\n          : (<Component {...props} />)\n      )}\n    />\n  )\n}\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { HashRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport { startChecking } from '../actions/auth'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\n\nexport const AppRouter = () => {\n  const { checking, uid } = useSelector( state => state.auth );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h5>Espere...</h5>\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={ LoginScreen }\n            isAuthenticated={ !!uid }\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={ CalendarScreen }\n            isAuthenticated={ !!uid }\n          />\n\n          <Redirect to='/'/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n}\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        checking: false,\n        ...action.payload\n      }\n    \n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false \n      }\n\n    case types.authLogout:\n      return {\n        checking: false\n      }\n  \n    default:\n      return state;\n  }\n}","import moment from 'moment';\nimport { types } from '../types/types';\n\nconst initialState = {\n  events:  [{\n    id: new Date().getTime(),\n    title: 'Cumpleaños del jefe',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgColor: '#fafafa',\n    user: {\n      _id: '123',\n      name: 'José Pedro' \n    }\n  }],\n  activeEvent: null\n}\n\nexport const calendarReducer = (state= initialState, action) => {\n  switch (action.type) {\n    case types.setActiveEvent:\n      return {\n        ...state,\n        activeEvent: action.payload\n      }\n    \n    case types.addNewEvent:\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      }\n\n    case types.clearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null\n      }\n    \n    case types.updatedEvent:\n      return {\n        ...state,\n        events: state.events.map(\n          e => (e.id === action.payload.id ) ? action.payload : e\n        )\n      }\n\n    case types.deletedEvent:\n      return {\n        ...state,\n        events: state.events.filter(\n          e => (e.id !== state.activeEvent.id)\n        ),\n        activeEvent: null\n      }\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [ ...action.payload ]\n      }\n\n    case types.logoutEvent:\n      return {\n        ...initialState\n      }\n    \n    default:\n      return state;\n  }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      }\n  \n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);","import React from 'react'\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}